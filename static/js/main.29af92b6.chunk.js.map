{"version":3,"sources":["components/Globalstyle.js","components/Themes.js","components/colors/colorsConsts.js","components/charts/LineChart/CustomLineChart.jsx","components/Loading.jsx","components/Historical.jsx","components/charts/BarChart/CustomBarChart.jsx","components/Daily.jsx","components/charts/ChartOptions.jsx","components/Dashboard.jsx","components/About.jsx","components/NavigationBar.jsx","components/useDarkMode.js","components/dataFetching/dataFetching.js","components/charts/LineChart/VaccineChart.jsx","components/Vaccine.jsx","components/charts/Choropleth/CustomChoropleth.jsx","components/charts/Choropleth/ChoroOpts.jsx","components/useCurrentWindowSize.jsx","components/WorldMap.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","backround","darkTheme","categoryColor","cases","deaths","recovered","CustomLineCharts","data","countryData","className","ResponsiveContainer","width","height","LineChart","margin","left","right","Tooltip","formatter","value","Intl","NumberFormat","format","XAxis","dataKey","allowDuplicatedCategory","YAxis","type","tickFormatter","Legend","Brush","stroke","fill","map","c","Line","name","dot","Loading","Alert","variant","Heading","Historical","props","opts","country","useState","isLoaded","setIsLoaded","undefined","setCountryData","useEffect","_country","fetch","headers","accept","then","res","json","result","timeline","countryDataFormatted","Object","entries","category","values","cat","date","number","push","toast","error","e","filter","v","id","y","filterData","defaultProps","React","memo","CustomBarChart","toPrint","BarChart","Bar","Daily","countryToFetch","forEach","elem","prev","curr","dataCases","dataDeaths","dataRecovered","dataFinal","i","length","datum","position","optsToPrint","o","ChartOptions","changeOpts","state","_setState","setState","s","Form","inline","Group","controlId","Row","Check","custom","label","defaultChecked","onChange","defaultCountry","Dashboard","countries","setCountries","setCountry","options","setOptions","tabsClassName","tabClassName","sort","d","as","Label","column","sm","Col","Control","defaultValue","target","style","backgroundColor","color","borderColor","Tabs","defaultActiveKey","Tab","eventKey","title","mountOnEnter","About","href","NavigationBar","basename","toggleTheme","Navbar","collapseOnSelect","expand","bg","Brand","src","alt","Toggle","aria-controls","Collapse","Nav","Link","Button","onClick","useDarkMode","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","vaccineRelUrl","timespan","startWithNotNull","a","url","catch","dataObj","Date","vaccines","d1","d2","firstNotZeroIdx","findIndex","val","idx","geoMapRelUrl","countryInfo","iso3","formatDate","getMonth","getDate","getFullYear","VaccineChart","labelFormatter","Vaccine","loaded","setLoaded","setData","fetchVaccineData","fetchedData","CustomChoropleth","maxValue","colors","setColors","features","top","bottom","domain","unknownColor","valueFormat","projectionType","projectionScale","projectionTranslation","projectionRotation","enableGraticule","graticuleLineColor","borderWidth","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","effects","on","ChoroOpts","defaultOpt","stateObj","opt","optToChange","newState","getWindowDimensions","innerWidth","innerHeight","categories","defaultCategory","categoryRelMaxValues","WorldMap","windowDimensions","size","setSize","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useCurrentWindowSize","setCategory","fetchGeoMapData","item","_data","_category","max","Math","min","BASENAME","App","themeToggler","autoClose","Container","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29af92b6.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n  `;\n\n/* font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n * transition: all 0.50s linear;\n */\n","export const lightTheme = {\n  body: '#FFF',\n  text: '#101010',\n  toggleBorder: '#FFF',\n  backround: '#363537',\n};\n\nexport const darkTheme = {\n  body: '#121212', // '#363537',\n  text: '#FAFAFA',\n  toggleBorder: '#6B8096',\n  backround: '#363537',\n};\n","const categoryColor = {\n  cases: '#FF0000',\n  deaths: '#FFAD05', // \"#252525\",\n  recovered: '#62FF00',\n};\n\nexport default categoryColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LineChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Line, Legend, Brush,\n} from 'recharts';\nimport './CustomLineChart.css';\n\nimport { darkTheme } from '../../Themes';\nimport categoryColor from '../../colors/colorsConsts';\n\nfunction CustomLineCharts({ data, theme }) {\n  const countryData = data;\n\n  return (\n    <div className=\"chart-container\">\n      <ResponsiveContainer width=\"100%\" height={500}>\n        <LineChart margin={{ left: 25, right: 4 }}>\n          <Tooltip formatter={(value) => new Intl.NumberFormat('it').format(value)} />\n          <XAxis dataKey=\"date\" allowDuplicatedCategory={false} />\n          <YAxis\n            type=\"number\"\n            dataKey=\"number\"\n            tickFormatter={(value) => new Intl.NumberFormat('it').format(value)}\n          />\n          <Legend />\n          <Brush\n            dataKey=\"date\"\n            stroke={theme === 'dark' ? darkTheme.text : ''}\n            fill={theme === 'dark' ? darkTheme.backround : '#fff'}\n          />\n          {countryData.map((c) => (\n            <Line\n              type=\"monotone\"\n              dataKey=\"number\"\n              data={c.data}\n              name={c.name}\n              key={c.name}\n              dot={false}\n              stroke={categoryColor[c.name]}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nCustomLineCharts.propTypes = {\n  data: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.object)).isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default CustomLineCharts;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction Loading() {\n  return (\n    <>\n      <Alert variant=\"light\">\n        <Alert.Heading>I&apos;m loading the data</Alert.Heading>\n        <p>Please be patient...</p>\n      </Alert>\n    </>\n  );\n}\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport CustomLineCharts from './charts/LineChart/CustomLineChart';\nimport './Dashboard.css';\nimport Loading from './Loading';\n\nconst BASE_URL = 'https://disease.sh';\nconst days = 'all';\n\nfunction Historical(props) {\n  const { opts, theme, country } = props;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [countryData, setCountryData] = useState(undefined);\n\n  function fetchCountryData(_country) {\n    if (!_country) return;\n    fetch(`${BASE_URL}/v3/covid-19/historical/${_country}?lastdays=${days}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.timeline\n            && result.timeline.cases\n            && result.timeline.deaths\n            && result.timeline.recovered) {\n            const countryDataFormatted = [];\n            // eslint-disable-next-line no-restricted-syntax\n            for (const [category, values] of Object.entries(result.timeline)) {\n              const cat = { name: category, data: [] };\n              // eslint-disable-next-line no-restricted-syntax\n              for (const [date, number] of Object.entries(values)) {\n                cat.data.push({\n                  date,\n                  number,\n                });\n              }\n              countryDataFormatted.push(cat);\n            }\n            setIsLoaded(true);\n            setCountryData(countryDataFormatted);\n          } else {\n            toast.error('Bad response format.');\n          }\n        },\n        (e) => {\n          toast.error(e);\n        },\n      );\n  }\n\n  function filterData(v, id) {\n    // y = true if:\n    // id is that of cases && opts.cases is true\n    // id is that of deaths && opts.deaths is true\n    // id of recovered && opts.recovered === true\n    let y;\n    switch (id) {\n      case 0:\n        y = opts.cases;\n        break;\n      case 1:\n        y = opts.deaths;\n        break;\n      case 2:\n        y = opts.recovered;\n        break;\n      default:\n        break;\n    }\n    if (y) return v;\n    return undefined;\n  }\n\n  useEffect(() => {\n    fetchCountryData(country);\n  }, [country]);\n\n  if (!isLoaded || !countryData) {\n    return (\n      <>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"mt-3\">\n      <CustomLineCharts\n        data={countryData.filter((v, id) => filterData(v, id))}\n        theme={theme}\n      />\n    </div>\n  );\n}\n\nHistorical.propTypes = {\n  opts: PropTypes.objectOf(PropTypes.bool),\n  theme: PropTypes.string,\n  country: PropTypes.string.isRequired,\n};\n\nHistorical.defaultProps = {\n  opts: {},\n  theme: 'light',\n};\n\nexport default React.memo(Historical);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar, Legend, Brush,\n} from 'recharts';\n\nimport { darkTheme } from '../../Themes';\nimport categoryColor from '../../colors/colorsConsts';\nimport './CustomBarChart.css';\n\nfunction CustomBarChart(props) {\n  const { countryData } = props;\n  const { toPrint } = props;\n  const { theme } = props;\n\n  return (\n    <div className=\"chart-container\">\n      <ResponsiveContainer width=\"100%\" height={500}>\n        <BarChart margin={{ left: 25, right: 4 }} data={countryData}>\n          <Tooltip formatter={(value) => new Intl.NumberFormat('it').format(value)} />\n          <XAxis dataKey=\"date\" />\n          <YAxis type=\"number\" tickFormatter={(value) => new Intl.NumberFormat('it').format(value)} />\n          <Legend />\n          <Brush\n            dataKey=\"date\"\n            stroke={theme === 'dark' ? darkTheme.text : ''}\n            fill={theme === 'dark' ? darkTheme.backround : '#fff'}\n          />\n          {toPrint.map((c) => (<Bar dataKey={c} name={c} key={c} fill={categoryColor[c]} />))}\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nCustomBarChart.propTypes = {\n  countryData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  theme: PropTypes.string,\n  toPrint: PropTypes.arrayOf(PropTypes.string),\n};\n\nCustomBarChart.defaultProps = {\n  theme: 'light',\n  toPrint: [],\n};\n\nexport default CustomBarChart;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport './Dashboard.css';\nimport Loading from './Loading';\nimport CustomBarChart from './charts/BarChart/CustomBarChart';\n\nconst BASE_URL = 'https://disease.sh';\nconst days = 'all';\n\nfunction Daily(props) {\n  const { theme, opts, country } = props;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [countryData, setCountryData] = useState(undefined);\n\n  function fetchCountryData(countryToFetch) {\n    if (!countryToFetch) return;\n    fetch(`${BASE_URL}/v3/covid-19/historical/${countryToFetch}?lastdays=${days}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result?.timeline?.cases\n            && result?.timeline?.deaths\n            && result?.timeline?.recovered) {\n            let countryDataFormatted = [];\n            // eslint-disable-next-line no-restricted-syntax\n            for (const [category, values] of Object.entries(result.timeline)) {\n              const cat = { name: category, data: [] };\n              // eslint-disable-next-line no-restricted-syntax\n              for (const [date, number] of Object.entries(values)) {\n                cat.data.push({\n                  date,\n                  number,\n                });\n              }\n              countryDataFormatted.push(cat);\n            }\n\n            countryDataFormatted.forEach((elem) => {\n              let prev = 0;\n              let curr = 0;\n              // eslint-disable-next-line no-restricted-syntax\n              for (const e of elem.data) {\n                curr = e.number;\n                e.number = (e.number - prev > 0) ? e.number - prev : 0;\n                prev = curr;\n              }\n            });\n            const dataCases = countryDataFormatted[0].data;\n            const dataDeaths = countryDataFormatted[1].data;\n            const dataRecovered = countryDataFormatted[2].data;\n            const dataFinal = [];\n            /* && dataRecovered.length && dataDeaths.length was here:\n            for( ... ; ... here ; ...) */\n            for (let i = 0; i < dataCases.length; i++) {\n              const datum = { date: dataCases[i].date };\n              datum.cases = dataCases[i].number;\n              datum.recovered = dataRecovered[i].number;\n              datum.deaths = dataDeaths[i].number;\n              dataFinal.push(datum);\n            }\n            countryDataFormatted = dataFinal;\n            setIsLoaded(true);\n            setCountryData(countryDataFormatted);\n          } else {\n            toast('Bad response format.', {\n              type: 'error',\n              position: 'top-right',\n            });\n          }\n        },\n        () => {\n          toast('Failed to fetch', {\n            type: 'error',\n            position: 'top-right',\n          });\n        },\n      );\n  }\n\n  useEffect(() => {\n    fetchCountryData(country);\n  }, [country]);\n\n  /** Return only the opts to be displayed\n   *  remember that unwanted options are falsy. */\n  function toPrint(optsToPrint) {\n    const res = [];\n    // eslint-disable-next-line no-restricted-syntax, guard-for-in, no-unused-expressions\n    for (const o in optsToPrint) optsToPrint[o] && res.push(o);\n    return res;\n  }\n\n  if (!isLoaded || !countryData) {\n    return (\n      <>\n        <Loading />\n      </>\n    );\n  }\n  return (\n    <div className=\"mt-3\">\n      <CustomBarChart theme={theme} countryData={countryData} toPrint={toPrint(opts)} />\n    </div>\n  );\n}\n\nDaily.propTypes = {\n  opts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  theme: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Daily);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form } from 'react-bootstrap';\n\nconst ChartOptions = ({ opts, changeOpts }) => {\n  const [state, _setState] = useState(opts);\n\n  const setState = (s) => {\n    changeOpts(s);\n    _setState(s);\n  };\n\n  return (\n    <Form inline>\n      <Form.Group controlId=\"chartsOptions\">\n        <Form.Row>\n          <Form.Check\n            custom\n            type=\"switch\"\n            label=\"cases\"\n            id=\"casesOpt\"\n            className=\"mr-2\"\n            defaultChecked={state.cases}\n            value={state.cases}\n            onChange={() => setState({ ...state, cases: !state.cases })}\n          />\n          <Form.Check\n            custom\n            type=\"switch\"\n            label=\"deaths\"\n            id=\"deathsOpt\"\n            className=\"mr-2\"\n            defaultChecked={state.deaths}\n            value={state.deaths}\n            onChange={() => setState({ ...state, deaths: !state.deaths })}\n          />\n          <Form.Check\n            custom\n            type=\"switch\"\n            label=\"recovered\"\n            id=\"recoveredOpt\"\n            defaultChecked={state.recovered}\n            value={state.recovered}\n            onChange={() => setState({ ...state, recovered: !state.recovered })}\n          />\n        </Form.Row>\n      </Form.Group>\n    </Form>\n  );\n};\n\nChartOptions.propTypes = {\n  opts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  changeOpts: PropTypes.func.isRequired,\n};\n\nexport default ChartOptions;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Tabs, Tab, Form, Col,\n} from 'react-bootstrap';\nimport './Dashboard.css';\nimport { toast } from 'react-toastify';\nimport Historical from './Historical';\nimport Daily from './Daily';\nimport { lightTheme, darkTheme } from './Themes';\n\nimport Loading from './Loading';\nimport ChartOptions from './charts/ChartOptions';\n\nconst BASE_URL = 'https://disease.sh';\nconst defaultCountry = 'Italy';\n\nfunction Dashboard({ theme }) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(defaultCountry);\n  const [options, setOptions] = useState({ cases: true, deaths: true, recovered: false });\n\n  let tabsClassName = 'mt-3 ';\n  let tabClassName = '';\n  if (theme === 'dark') {\n    tabsClassName += 'dark-tabs';\n    tabClassName += 'dark-tab ';\n  }\n\n  function fetchCountries(sort) {\n    setIsLoaded(true);\n    fetch(`${BASE_URL}/v3/covid-19/countries${sort && `?sort=${sort}`}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // eslint-disable-next-line no-shadow\n          const countries = { countries: [] };\n          result.forEach((d) => {\n            countries.countries.push(d.country);\n          });\n          setCountries(countries);\n        },\n        (e) => {\n          toast.error(e);\n        },\n      );\n  }\n\n  useEffect(() => {\n    if (!isLoaded) fetchCountries('cases');\n  }, [isLoaded]);\n\n  if (countries && country) {\n    return (\n      <>\n        <style type=\"text/css\">\n          {`\n            .dark-tabs {\n              background-color: ${darkTheme.backround};\n              color: ${darkTheme.text};\n              border-radius: .25rem;\n              border-color: gray;\n            }\n  \n            .dark-tab {\n              border-radius: .25rem;\n            }\n            .dark-tab, .nav-link.active {\n              color: ${darkTheme.text};\n              \n            }\n  \n            a {\n              color: ${theme === 'dark' ? darkTheme.text : lightTheme.text}\n            }\n            a:hover {\n              color: ${theme === 'dark' ? darkTheme.text : lightTheme.text}\n            }\n  \n            .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n              border-radius: 0.25rem;\n            }\n            `}\n        </style>\n        <div className=\"flex-container\">\n          <Form className=\"mt-3\">\n            <Form.Group as={Form.Row} controlId=\"country\">\n              <Form.Label column sm={4}>Selected Country</Form.Label>\n              <Col sm={6}>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  value={country}\n                  defaultValue={defaultCountry}\n                  onChange={(e) => { setCountry(e.target.value); }}\n                  style={\n                    theme === 'light' ? {} : {\n                      backgroundColor: darkTheme.backround,\n                      color: darkTheme.text,\n                      borderColor: 'gray',\n                    }\n                  }\n                >\n                  {countries?.countries?.map(\n                    (_country) => (<option key={_country} value={_country}>{_country}</option>),\n                  )}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n          </Form>\n          <ChartOptions opts={options} changeOpts={setOptions} />\n        </div>\n\n        <Tabs\n          defaultActiveKey=\"cumulative\"\n          id=\"dash-tabs\"\n          className={tabsClassName}\n        >\n          <Tab\n            eventKey=\"cumulative\"\n            title=\"Cumulative\"\n            className={tabClassName}\n            mountOnEnter\n          >\n            <Historical theme={theme} country={country} opts={options} />\n          </Tab>\n          <Tab\n            eventKey=\"daily\"\n            title=\"Daily\"\n            className={tabClassName}\n            mountOnEnter\n          >\n            <Daily theme={theme} country={country} opts={options} />\n          </Tab>\n        </Tabs>\n      </>\n    );\n  }\n  return (<Loading />);\n}\n\nDashboard.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport './About.css';\n\nfunction About() {\n  return (\n    <>\n      <h1>About</h1>\n      <h2>\n        Covid-19 Dashboard\n      </h2>\n      <p>\n        See the current Covid-19 situation.\n      </p>\n      <h3>whoami</h3>\n      <p>\n        My name is\n        {' '}\n        <a href=\"https://lorenzofelletti.github.io\">Lorenzo Felletti</a>\n        {' '}\n        and I&apos;m a computer engineering student ad the University of Bologna.\n      </p>\n      <p>\n        Source code\n        {' '}\n        <a href=\"https://github.com/lorenzofelletti/covid19dashboard\">here</a>\n        .\n      </p>\n    </>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport {\n  Navbar, Nav, Button, Form,\n} from 'react-bootstrap';\nimport { func, string } from 'prop-types';\nimport './NavigationBar.css';\n\n/**\n * The application Navigation Bar.\n * It is based on the react-bootstrap NavBar component.\n */\nconst NavigationBar = ({ basename, theme, toggleTheme }) => (\n  <Navbar id=\"navigation-bar\" collapseOnSelect expand=\"lg\" bg={theme} variant={theme}>\n    <Navbar.Brand href={`${basename}`}>\n      <img\n        src={`${basename}/logo.gif`}\n        width=\"120\"\n        height=\"40\"\n        className=\"d-inline-block align-top\"\n        alt=\"covid19dashboard\"\n      />\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href={`${basename}`}>Dashboard</Nav.Link>\n        <Nav.Link href={`${basename}/#/vaccine`}>Vaccines</Nav.Link>\n        <Nav.Link href={`${basename}/#/map`}>Map</Nav.Link>\n        <Nav.Link href={`${basename}/#/about`}>About</Nav.Link>\n      </Nav>\n      <Form inline>\n        <Button variant={(theme === 'light') ? 'dark' : 'light'} onClick={toggleTheme}>\n          Switch Theme\n        </Button>\n      </Form>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nNavigationBar.propTypes = {\n  basename: string.isRequired,\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n};\n\nexport default NavigationBar;\n","import { useEffect, useState } from 'react';\n\nconst useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [mountedComponent, setMountedComponent] = useState(false);\n\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    theme === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme ? setTheme(localTheme) : setMode('light');\n    setMountedComponent(true);\n  }, []);\n\n  return [theme, themeToggler, mountedComponent];\n};\n\nexport default useDarkMode;\n","export const basename = 'https://disease.sh/';\n\nconst vaccineRelUrl = 'v3/covid-19/vaccine/coverage/countries/';\n/** Fetch data about the vaccines from https://disease.sh.\n *\n *  country -> the country of which you want the data\n *\n *  timespan -> can be an integer number (also of string type) or 'all' to fetch\n *  all the data available\n *\n *  startWithNotNull -> true if you want the series to start with the first day with not\n *  null vaccines.\n */\nexport async function fetchVaccineData(country, timespan, startWithNotNull) {\n  if (!country) return undefined;\n  const url = `${basename}${vaccineRelUrl}${country}?lastdays=${timespan}`;\n\n  const dataObj = await fetch(url, { headers: { accept: 'application/json' } })\n    .then((res) => res.json())\n    .then((res) => res.timeline)\n    .catch(() => undefined);\n\n  const data = [];\n  if (!dataObj) return data;\n\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const date in dataObj) {\n    data.push({ date: new Date(date), vaccines: dataObj[date] });\n  }\n  data.sort((d1, d2) => d1.date - d2.date);\n\n  if (!startWithNotNull) return data;\n\n  const firstNotZeroIdx = data.findIndex((val) => val.vaccines > 0);\n  return data.filter((val, idx) => idx >= firstNotZeroIdx);\n}\n\nconst geoMapRelUrl = 'v3/covid-19/countries';\nexport async function fetchGeoMapData() {\n  const url = `${basename}${geoMapRelUrl}`;\n  const data = await fetch(url, { headers: { accept: 'application/json' } })\n    .then((res) => res.json())\n    .then((res) => res.map((country) => ({\n      id: country?.countryInfo?.iso3,\n      cases: country.cases,\n      deaths: country.deaths,\n      recovered: country.recovered,\n    })))\n    .catch(() => {});\n\n  return data;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LineChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Line, Legend, Brush,\n} from 'recharts';\nimport './CustomLineChart.css';\n\nimport { darkTheme } from '../../Themes';\n\nfunction formatDate(d) {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear() - 2000}`;\n}\n\nfunction VaccineChart({ data, theme }) {\n  return (\n    <div className=\"chart-container\">\n      <ResponsiveContainer width=\"100%\" height={500}>\n        <LineChart margin={{ left: 25, right: 4 }}>\n          <Tooltip\n            formatter={(value) => new Intl.NumberFormat('en').format(value)}\n            labelFormatter={((d) => `Date: ${formatDate(d)}`)}\n          />\n          <XAxis\n            dataKey=\"date\"\n            tickFormatter={(d) => formatDate(d)}\n          />\n          <YAxis\n            type=\"number\"\n            dataKey=\"vaccines\"\n            tickFormatter={(value) => new Intl.NumberFormat('en').format(value)}\n          />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"vaccines\"\n            data={data}\n            name=\"vaccines\"\n            dot={false}\n            stroke={theme === 'light' ? '#0000ff' : '#7fffd4'}\n          />\n          <Brush\n            stroke={theme === 'dark' ? darkTheme.text : ''}\n            fill={theme === 'dark' ? darkTheme.backround : '#fff'}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nVaccineChart.propTypes = {\n  data: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.object)).isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default VaccineChart;\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { fetchVaccineData } from './dataFetching';\nimport VaccineChart from './charts/LineChart/VaccineChart';\nimport Loading from './Loading';\n\nfunction Vaccine(props) {\n  const { theme, country } = props;\n  const [loaded, setLoaded] = useState(false);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (!loaded) {\n      fetchVaccineData(country, 'all', true)\n        .then((fetchedData) => {\n          setData(fetchedData);\n          setLoaded(true);\n        });\n      // missing check on error;\n    }\n  }, [loaded, data]);\n\n  if (!loaded) {\n    return (\n      <div>\n        <h1>Vaccines</h1>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>Vaccines</h1>\n      <VaccineChart theme={theme} data={data} />\n    </div>\n  );\n}\n\nVaccine.propTypes = {\n  theme: PropTypes.string,\n  country: PropTypes.string,\n};\n\nVaccine.defaultProps = {\n  country: 'Italy',\n  theme: 'light',\n};\n\nexport default Vaccine;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveChoropleth } from '@nivo/geo';\nimport countries from './world_countries.json';\n\nexport default function CustomChoropleth({\n  data, category, theme, maxValue, height,\n}) {\n  const [colors, setColors] = useState();\n\n  useEffect(() => {\n    switch (category) {\n      case 'cases':\n        setColors('reds');\n        break;\n      case 'deaths':\n        setColors('YlOrRd');\n        break;\n      case 'recovered':\n        setColors('YlGn');\n        break;\n      default:\n        setColors('reds');\n    }\n  }, [category]);\n\n  return (\n    <ResponsiveChoropleth\n      data={data}\n      features={countries.features}\n      margin={{\n        top: 0, right: 0, bottom: 0, left: 0,\n      }}\n      colors={colors}\n      domain={[0, maxValue]}\n      unknownColor=\"#666666\"\n      label=\"properties.name\"\n      valueFormat=\".2s\"\n      projectionType=\"mercator\"\n      projectionScale={height > 400 ? 120 : 100}\n      projectionTranslation={[0.5, 0.6]}\n      projectionRotation={[0, 0, 0]}\n      enableGraticule\n      graticuleLineColor={theme === 'light' ? '#dddddd' : '#333333'}\n      borderWidth={0.5}\n      borderColor={theme === 'light' ? '#152538' : '#333333'}\n      legends={[\n        {\n          anchor: 'bottom-left',\n          direction: 'column',\n          justify: true,\n          translateX: 20,\n          translateY: -100,\n          itemsSpacing: 0,\n          itemWidth: 94,\n          itemHeight: 18,\n          itemDirection: 'left-to-right',\n          itemTextColor: theme === 'light' ? '#444444' : '#aaaaaa',\n          itemOpacity: 0.85,\n          symbolSize: 18,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: theme === 'light' ? '#000000' : '#eeeeee',\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nCustomChoropleth.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    value: PropTypes.number,\n  })).isRequired,\n  category: PropTypes.string,\n  theme: PropTypes.string,\n  maxValue: PropTypes.number,\n  height: PropTypes.number,\n};\n\nCustomChoropleth.defaultProps = {\n  category: '',\n  theme: 'light',\n  maxValue: 1 * 10 ** 6,\n  height: 400,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Col } from 'react-bootstrap';\n// import './ChoroOpts.css';\n\nconst ChoroOpts = ({ opts, changeOpts, defaultOpt }) => {\n  const [state, _setState] = useState();\n\n  useEffect(() => {\n    const stateObj = {};\n    opts.forEach((opt) => {\n      stateObj[opt] = opt === defaultOpt;\n    });\n    _setState(stateObj);\n  }, []);\n\n  const setState = (optToChange) => {\n    changeOpts(optToChange);\n    const newState = { ...state };\n    // eslint-disable-next-line no-restricted-syntax, guard-for-in\n    for (const opt in newState) {\n      newState[opt] = opt === optToChange;\n    }\n    _setState(newState);\n  };\n\n  // returned empty befor state is set!\n  if (!state) {\n    return (\n      <Form inline>\n        <Form.Group controlId=\"chartOpts\">\n          <Form.Row>\n            {opts.map((opt) => (\n              <Col sm>\n                <Form.Check\n                  custom\n                  inline\n                  type=\"radio\"\n                  label={opt}\n                  id={`${opt}Id`}\n                  key={`${opt}Key`}\n                />\n              </Col>\n            ))}\n          </Form.Row>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  // \"actual\" component\n  return (\n    <Form inline>\n      <Form.Group controlId=\"chartOpts\">\n        <Form.Row>\n          {opts.map((opt) => (\n            <Col>\n              <Form.Check\n                type=\"radio\"\n                label={opt}\n                id={`${opt}Id`}\n                key={`${opt}Key`}\n                name=\"opts\"\n                className=\"mr-2\"\n                defaultChecked={opt === defaultOpt}\n                onChange={() => setState(opt)}\n              />\n            </Col>\n          ))}\n        </Form.Row>\n      </Form.Group>\n    </Form>\n  );\n};\n\nChoroOpts.propTypes = {\n  opts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  changeOpts: PropTypes.func.isRequired,\n  defaultOpt: PropTypes.string,\n};\n\nChoroOpts.defaultProps = {\n  defaultOpt: undefined,\n};\n\nexport default ChoroOpts;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useCurrentWindowSize() {\n  // save current window width in the state object\n  const [size, setSize] = useState(getWindowDimensions());\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null;\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId);\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => setSize(getWindowDimensions()), 150);\n    };\n    // set resize listener\n    window.addEventListener('resize', resizeListener);\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []);\n\n  return size;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGeoMapData } from './dataFetching';\nimport CustomChoropleth from './charts/Choropleth/CustomChoropleth';\nimport ChoroOpts from './charts/Choropleth/ChoroOpts';\nimport useCurrentWindowSize from './useCurrentWindowSize';\nimport Loading from './Loading';\n\nconst categories = ['cases', 'deaths', 'recovered'];\nconst defaultCategory = 'cases';\n\n// relative max to have more readable choropleth\nconst categoryRelMaxValues = {\n  cases: 5 * 10 ** 6,\n  deaths: 1 * 10 ** 5,\n  recovered: 5 * 10 ** 6,\n};\n\nexport default function WorldMap({ theme }) {\n  const windowDimensions = useCurrentWindowSize();\n\n  const [data, setData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [category, setCategory] = useState(defaultCategory);\n\n  useEffect(() => {\n    if (!loaded) {\n      fetchGeoMapData().then((fetchedData) => {\n        setData(fetchedData);\n        setLoaded(true);\n      });\n      // missing check on error\n    }\n  }, [loaded, data]);\n\n  const maxValue = (_data, _category) => {\n    const max = Math.max(..._data);\n    // eslint-disable-next-line no-underscore-dangle\n    return Math.min(max, categoryRelMaxValues[_category]);\n  };\n\n  if (!loaded) return (<Loading />);\n\n  return (\n    <>\n      <h1>World Map</h1>\n      <ChoroOpts\n        opts={categories}\n        changeOpts={setCategory}\n        defaultOpt={defaultCategory}\n      />\n      <div style={{ height: windowDimensions.width > '800' ? '500px' : '400px', color: '#101010' }} className=\"mt-3\">\n        <CustomChoropleth\n          data={data.map((item) => ({ id: item.id, value: item[category] }))}\n          category={category}\n          theme={theme}\n          maxValue={maxValue(data.map((item) => item[category]), category)}\n          height={windowDimensions.width > '800' ? 500 : 400}\n        />\n      </div>\n    </>\n  );\n}\n\nWorldMap.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { ThemeProvider } from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyles } from './components/Globalstyle';\nimport { lightTheme, darkTheme } from './components/Themes';\nimport Dashboard from './components/Dashboard';\nimport About from './components/About';\nimport NavigationBar from './components/NavigationBar';\nimport useDarkMode from './components/useDarkMode';\nimport Vaccine from './components/Vaccine';\nimport WorldMap from './components/WorldMap';\n\nconst BASENAME = '/covid19dashboard';\n\nfunction App() {\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n\n  // eslint-disable-next-line react/jsx-filename-extension\n  if (!mountedComponent) { return <div />; }\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <ToastContainer autoClose={2500} />\n        <div className=\"App\">\n          <Router basename={BASENAME}>\n            <NavigationBar basename={BASENAME} theme={theme} toggleTheme={themeToggler} />\n            <Container>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Dashboard theme={theme} />\n                </Route>\n                <Route path=\"/about\">\n                  <About theme={theme} />\n                </Route>\n                <Route path=\"/vaccine\">\n                  <Vaccine theme={theme} />\n                </Route>\n                <Route path=\"/map\">\n                  <WorldMap theme={theme} />\n                </Route>\n              </Switch>\n            </Container>\n          </Router>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}